@charset "utf-8";
/* CSS Document */

/* 
COLOR SCHEME
rgb(51,0,111) = uw purple; 
rgb(232,211,162) = uw gold; 
rgb(145,123,76) = uw metallic gold; 
any gray tint; 
white; 
black 
*/

nav{
	position:relative;
}

.logo {
	float: left;
	padding: 0 100px;
}

/* Remove list formatting and align second and third level menus under top level menu */
ul, li {
	padding: 0px;
	margin: 0px;
	list-style-type: none;
}

/* Place entire menu in a FlexBox and align them horizontally */
.topLevelMenu {
	display: flex;
	flex-basis: auto;
	flex-direction: row;
}

/* Equally space top menu items */
.topLevelMenu > li {
	margin: 0px 35px;
	border: 1px solid red;
	white-space: nowrap;
	padding: 0 10px 0 10px;
}

/* Prevents top-menu from shifting when dropdown opens. Aligns dropdown directly below header. Creates word-wrap */
.secLevelMenu {
	position:absolute;
	width: 170px;
	padding: 0 10px 0 10px;
	transform:translateX(10px); /* centered first regardless of width*/
    margin-left: -20px;
	white-space: normal;
}

/* Increase selectable area for hover */
.secLevelMenu > li {
	padding: 5px 0 5px 0;
}

/* Stop displaying dropdowns by default */
.secLevelMenu {
	display: none;
}

/* Stop displaying secondary dropdowns by default */
.thirdLevelMenu {
	display: none;
}

/* SELECTS ALL Top LEVEL MENUS (Can add :hover at the end to focus on hovering */
.topLevelMenu > li > a:first-child {
}

/* SELECTS ALL 2nd LEVEL MENUS */
.secLevelMenu > li > a:first-child {
}

/* SELECTS ALL 3nd LEVEL MENUS */
.thirdLevelMenu > li > a:first-child {
}


/* If we end up opting only for hover, not on-click menus */
/* On hover over first menu items, display dropdowns as flexboxes 
.topLevelMenu > li:hover .secLevelMenu {
	display:flex;
	flex-direction: column;
	position: absolute;
} */

/* When move cursor from first menu to dropdowns, keep dropdowns open 
.secLevelMenu:hover {
	display:flex;
	flex-direction: column;
	border: 1px solid red;
}*/

/* If we end up using pure css checkboxes
label {
  position: relative;
  cursor: pointer;
}

input {
	display: none;
}

input:checked~.secLevelMenu {
  display: block;
}

*/

/*
.secLevelMenu:hover > li > a:first-child:hover + .thirdLevelMenu {
	display:flex;
	flex-direction: column;
	border: 1px solid blue;
}

.thirdLevelMenu:hover {
	display: flex;
	flex-direction: column;
}
*/